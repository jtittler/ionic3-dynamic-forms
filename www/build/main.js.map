{"version":3,"sources":["../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/pages/home/home.ts","../../src/providers/questions/questions.ts","../../src/components/question-base/question-base.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/components/smf-textbox-question/smf-textbox-question.ts","../../src/components/dynamic-form/dynamic-form.ts","../../src/components/question-base/question-control.service.ts","../../src/components/smf-question/smf-question.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\treturn new Promise(function(resolve, reject) { reject(new Error(\"Cannot find module '\" + req + \"'.\")); });\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 106;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 106\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\treturn new Promise(function(resolve, reject) { reject(new Error(\"Cannot find module '\" + req + \"'.\")); });\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 148;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 148\n// module chunks = 0","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { QuestionsProvider } from '../../providers/questions/questions';\nimport { QuestionBase } from '../../components/question-base/question-base';\n\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html',\n  providers: [QuestionsProvider]\n})\nexport class HomePage {\n\n  questions: QuestionBase<any>[];\n  \n  constructor(public navCtrl: NavController, service: QuestionsProvider) {\n    this.questions = service.testQuestions();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { Injectable } from '@angular/core';\nimport 'rxjs/add/operator/map';\nimport { QuestionBase } from \"../../components/question-base/question-base\";\nimport { SmfTextboxQuestion } from \"../../components/smf-textbox-question/smf-textbox-question\";\n\n/*\n  Generated class for the QuestionsProvider provider.\n\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\n  for more info on providers and Angular DI.\n*/\n@Injectable()\nexport class QuestionsProvider {\n\n  constructor() {\n    \n  }\n\n  testQuestions(): QuestionBase<any>[] {\n    \n            let questions: QuestionBase<any>[] = [\n                new SmfTextboxQuestion({\n                    key: 'firstName',\n                    label: 'First Name',\n                    value: '',\n                    required: true,\n                    order: 1\n                }),\n            ];\n    \n            return questions.sort((a,b) => a.order - b.order);\n        }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/questions/questions.ts","export class ControlAttribute {\n    attributeNm: string;\n    attributeVal: any\n}\n\nexport class QuestionBase<T> {\n    value ?: T;\n    key ?: string;\n    label ?: string;\n    required: boolean;\n    order: number;\n    controlType: string;\n    attributes ?: ControlAttribute[];\n    classes ?: string[];\n    id?: string;\n    type ?: string;\n    placeholder ?: string;\n\n    constructor (options: {\n        value ?: T,\n        key ?: string,\n        label ?: string,\n        required ?: boolean,\n        order ?: number,\n        controlType ?: string,\n        attributes ?: ControlAttribute[],\n        classes ?: string[],\n        id ?: string,\n        type ?: string,\n        placeholder ?: string\n    } = {}) {\n        this.value = options.value || null;\n        this.key = options.key || '';\n        this.label = options.label || '';\n        this.required = !!options.required;\n        this.order = (options.order === undefined) ? 1 : options.order;\n        this.controlType = options.controlType || '';\n        this.attributes = options.attributes || [];\n        this.classes = options.classes || [];\n        this.id = options.id || '';\n        this.type = options.type || '';\n        this.placeholder = options.type || '';\n    } \n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/question-base/question-base.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\n\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\nimport { DynamicFormComponent } from '../components/dynamic-form/dynamic-form';\nimport { SmfQuestionComponent } from '../components/smf-question/smf-question';\nimport { QuestionsProvider } from '../providers/questions/questions';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage,\n    DynamicFormComponent,\n    SmfQuestionComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    QuestionsProvider\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { HomePage } from '../pages/home/home';\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = HomePage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { QuestionBase } from '../question-base/question-base';\n\n/**\n * Represents an ion-input element, (standard textbox). Different types are supported.\n * See the Ionic Documentation for options for ion-input components.\n * \n * @export\n * @class SmfTextboxQuestion\n * @extends {QuestionBase<string>}\n */\nexport class SmfTextboxQuestion extends QuestionBase<string> {\n    controlType = 'textbox';\n    type: string;\n\n    constructor(options: {} = {}) {\n        super(options);\n        this.type = options['type'] || '';\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/smf-textbox-question/smf-textbox-question.ts","import { Component, Input, OnChanges } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\nimport { QuestionBase } from '../question-base/question-base';\nimport { QuestionControlService } from '../question-base/question-control.service';\n\n/**\n * Generated class for the DynamicFormComponent component.\n *\n * See https://angular.io/docs/ts/latest/api/core/index/ComponentMetadata-class.html\n * for more info on Angular Components.\n */\n@Component({\n  selector: 'dynamic-form',\n  templateUrl: './dynamic-form.html',\n  providers: [ QuestionControlService]\n})\nexport class DynamicFormComponent implements OnChanges {\n\n  @Input() questions: QuestionBase<any>[];\n  \n  formGroup: FormGroup;\n  payLoad: string = '';\n\n  constructor(private qcs: QuestionControlService) {  }\n\n  ngOnChanges() {\n    this.formGroup = this.qcs.toFormGroup(this.questions || []);\n    this.payLoad = '';\n  }\n\n  onSubmit() {\n    this.payLoad = JSON.stringify(this.formGroup.value, null, 4);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/dynamic-form/dynamic-form.ts","import { Injectable } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { QuestionBase } from './question-base';\n\n@Injectable()\nexport class QuestionControlService {\n    \n    constructor() {}\n\n    toFormGroup(questions: QuestionBase<any>[]): FormGroup {\n\n        const formControls = questions.reduce(this.generateControl, {});\n\n        return new FormGroup(formControls);\n    }\n\n    private generateControl(controls: any, question: QuestionBase<any>) {\n        if (question.required) {\n            controls[question.id] = new FormControl(question.value || '', Validators.required);\n        }\n        else {\n            controls[question.id] = new FormControl(question.value || '');\n        }\n\n        return controls;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/question-base/question-control.service.ts","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { QuestionBase } from '../question-base/question-base';\n\n@Component({\n  selector: 'smf-question',\n  templateUrl: './smf-question.html'\n})\nexport class SmfQuestionComponent {\n\n  @Input() question: QuestionBase<any>;\n  @Input() form: FormGroup;\n  \n  get isValid() {\n    return this.form.controls[this.question.id].valid;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/smf-question/smf-question.ts"],"sourceRoot":""}